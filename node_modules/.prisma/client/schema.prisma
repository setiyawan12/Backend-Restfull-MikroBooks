generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["groupBy"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model books {
  id_books    Int       @id @default(autoincrement())
  title       String?
  publisher   String?
  author      String?
  isbn        Int?
  pages       Int?
  description String?
  cover_books String?
  discuss_id  Int?
  users_id    Int?
  rating_id   Int?
  category_id Int?
  user        Int?
  category    category? @relation(fields: [category_id], references: [id_category])
  users       users?    @relation(fields: [users_id], references: [id_users])
  rating      rating[]
}

model borrow {
  id_borrow  Int       @id @default(autoincrement())
  date_start DateTime? @db.Date
  date_end   DateTime? @db.Date
  id_books   Int?
  id_users   Int?
}

model category {
  id_category    Int     @id @default(autoincrement())
  category_name  String?
  category_cover String?
  books          books[]
}

model discuss {
  id_discuss BigInt  @id @default(autoincrement())
  diskusi    String?
  id_books   Int?
}

model users {
  id_users           Int            @id @default(autoincrement())
  name_users         String?
  username           String?
  email              String?
  password           String?
  books              String[]
  books_booksTousers books[]
  detail_users       detail_users[]
}

model rating {
  id_rating Int    @id @default(autoincrement())
  rating    Float?
  id_books  Int?
  books     books? @relation(fields: [id_books], references: [id_books])
}

model detail_users {
  id         Int       @id @default(autoincrement())
  users_id   Int?
  nik        Int?
  users_foto String?
  address    String?
  tlp        Int?
  gender     String?
  birth_date DateTime? @db.Date
  users      users?    @relation(fields: [users_id], references: [id_users])
}
